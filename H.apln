:Namespace H                                                         ⍝ Quaternions. jgl@dyalog.com 2023
    ⎕IO←0
    _P←{(c u v)←⍺⍺                                                   ⍝ quaternion product
        0::(⊃⍬⍴⎕DM)⎕SIGNAL ⎕EN                                       ⍝     throw all errors
        0∨.=(ra rw)←≢∘⍴¨⍺⍵:⍺×⍵                                       ⍝     scalar product
        ra>rw:+/v×[¯2↑⍳ra+1]⍵×[ra,⍨⍳rw-1](⊂c)⌷[ra-1]⍺                ⍝     larger at left
              +/u×[¯2↑⍳rw+1]⍺×[rw,⍨⍳ra-1](⊂c)⌷[rw-1]⍵                ⍝     larger at right
    }
    _P_←{(c u)←⍵⍵                                                    ⍝ quaternion product operator
        0::(⊃⍬⍴⎕DM)⎕SIGNAL ⎕EN                                       ⍝     throw all errors
        0∨.=(ra rw)←≢¨(a w)←⍴¨⍺⍵:⍺ ⍺⍺¨⍵                              ⍝     scalar product
        r←≢M←a⊣⍣(a>⍥≢w)⊢w                                            ⍝     find largest
        +/(↑(¯1↓M)⍴⊂u)×(4 4⍴⍤1⊢M⍴⍺)⍺⍺¨(⊂c)⌷[r-1]M⍴⍵                  ⍝     apply to each
    }
    c←↑(0 1 2 3)(1 0 3 2)(2 3 0 1)(3 2 1 0)                          ⍝ product components
    u←↑(1 ¯1 ¯1 ¯1)(1 1 1 ¯1)(1 ¯1 1 1)(1 1 ¯1 1)                    ⍝ product unit factors
    P←c u((1∘↑⍪¯1⊖¯3∘↑)u)_P ⋄ _P←_P_ c u ⋄ ⎕EX'cu',⊂'_P_'
    C←×⍤1∘(1,-3⍴1) ⋄ D←+.×⍤1∘C ⋄ M←(÷2)*⍨+.×⍤1⍨                      ⍝ conjugate, dot product and magnitude
    U←{⍺←1 ⋄ ⍺×⍵×[⍳(≢⍴⍵)-1]÷M⍵}                                      ⍝ unitary quaternion
    A←{⍺←¯3↑1 ⋄ (2○⍵),(1○⍵)∘.×U⍺}∘(÷∘2) ⋄ AD←A∘(180÷⍨○)              ⍝ quaternion from axis-angle (z)
    E←{⍺←↓∘.=⍨⍳3 ⋄ ⊃⍺P.A⊂[¯1↓⍳≢⍴⍵]⍵} ⋄ ED←E∘(180÷⍨○)                 ⍝ quaternion from Euler angles (xyz)
    RND←{⍺←1 ⋄ F←{(1 2○2×⊂○?⍺⍴0)×⊂⍵*÷2} ⋄ ⍺×U↑[0]⍵(F∘(1∘-),F)?⍵⍴0}   ⍝ random unitary quaternions    
    (u i j k)←↓∘.=⍨⍳4                                                ⍝ units

    ∇ Test ;t;T;S;v;w;s;p;q;r;a;b;c;d;e
        ⎕CT←1E¯10 ⋄ t←0 ⋄ w←?0
        T←{0∊⍵:('TEST FAILED: ',⍺)⎕signal 8 ⋄ t+←1}
        'broom bridge'T((⊂-u)≡¨P¨⍨i j k)∧(-u)≡i P j P k
        'unit products'T i j k≡j k i P¨ k i j
        'dot product'T(¯1≡¨D⍨¨i j k)∧(0≡¨i j k D¨j k i)
        :For s :In (⍬ 1 3 (2 3))
            (p q r)←RND¨3⍴⊆s ⋄ v←(s,4)⍴u ⋄ S←{⍵,' ',⍕s}
            (S'unit')T v≡⍥(1∘+)P∘C⍨q
            (S'neutral')T q∘≡¨(q P v)(v P q)
            (S'scalar')T(w×q P p)∘≡¨((w×q)P p)(q P w×p)
            (S'commutatative')T(q P w×v)≡(w×v)P q
            (S'associative')T(p P q P r)≡(p P q)P r
            (S'left distributive')T((p + q)P r)≡(p P r)+q P r
            (S'right distributive')T(p P q + r)≡(p P q)+p P r
            (S'random')T(((s⍴1)≡+.×⍤1⍨)∧(s,4)≡⍴)RND s
        :EndFor
        a←?4⍴0 ⋄ b←?2 3 4⍴0 ⋄ c←?4⍴⊂2 3⍴0 ⋄ d←?2 3 4⍴⊂2 3⍴0
        'conform'T 1⊣∘.P⍨a b c d
        e←0 w@0 2⊢c
        'mixed'T(⊂2 3)∧.≡⊃,/⍴¨¨(a c,3⍴⊂e)P¨(3⍴⊂e),a c
        'mixed scalar'T(w P a)≡(w,3⍴0)P a
        'operator'T(∘.P⍨a b c d)≡∘.(×_P)⍨a b c d
        'inner product'T(2 2)(3 3)≡⍴∘⊃¨c(+.×_P,⍥⊂+.×_P⍨)⍉¨c
        'outer product'T 2 3 2 3≡⍴⊃c∘.×_P d
        'scalar extension'T (w×d)≡w P d
        'scalar extension (op)'T (w×d)≡w×_P d
        'unitary'T(1∧.=∘∊M⍨)∘U¨a b c d
        ⍝ TODO: A AD E ED
        ⎕←(⍕t),' TESTS PASSED'
    ∇
:EndNamespace
