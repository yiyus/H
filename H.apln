:Namespace H                                                         ⍝ Quaternions. jgl@dyalog.com 2023
    ⎕IO←0
    i←↑(0 1 2 3)(1 0 3 2)(2 3 0 1)(3 2 1 0)                          ⍝ product indices
    u←↑(1 ¯1 ¯1 ¯1)(1 1 1 ¯1)(1 ¯1 1 1)(1 1 ¯1 1)                    ⍝ product unit factors
    _P←{(i u)←⍵⍵ ⋄ +/⍺(⍺⍺¨⍤1)u×(⊂i)⌷⍵}i u ⋄ P←+/u×⊣(×⍤1)(⊂i)⌷⊢       ⍝ hamilton product operator and function
    C←×∘(1,-3⍴1) ⋄ D←+.×∘C ⋄ M←(÷2)*⍨+.×⍨ ⋄ U←×∘(÷M)⍨                ⍝ conjugate, difference, magnitude, unitary
    A←{⍺←z ⋄ (⊂2○⍵),(⊂1○⍵)∘.×U⍺}∘(÷∘2) ⋄ AD←A∘(180÷⍨○)               ⍝ quaternion from axis-angle (z)
    E←{⍺←z x z ⋄ ⊃⍺P.A⍥⌽⍵} ⋄ ED←E∘(180÷⍨○)                           ⍝ quaternion from Euler angles (zxz)
    _←{⍺←⊢                                                           ⍝ apply to quaternion or vector components
        0::(⊃⍬⍴⎕DM)⎕SIGNAL ⎕EN                                       ⍝     throw all errors
        ⍬≡⍴⍵:⍺∇4↑⍤1⊢⍵ ⋄ 4>⊃⌽⍴⍵:⍺∇(¯4↑3↑⊢)⍤1⊢⍵ ⋄ 3=⎕NC'⍺':⍺⍺⍤1⊢⍵      ⍝     take vectors as right argument
        ⍬≡⍴⍺:(4↑⍤1⊢⍺)∇⍵ ⋄ 4>⊃⌽⍴⍺:((¯4↑3↑⊢)⍤1⊢⍺)∇⍵ ⋄ ⍺ ⍺⍺⍤1⊢⍵         ⍝     take vectors as left argument
    }
    R←{⍺(⊣P P∘C⍨)_⍵} ⋄ ∆←(¯2○D∘C⍥U)_ ⋄ ∆D←(180÷○1)×∆                 ⍝ rotate, relative angle, angle in degrees
    R2←(⊂1+⍳2)⌷⍤1{A⍺}R⊢ ⋄ R2D←(⊂1+⍳2)⌷⍤1{AD⍺}R⊢                      ⍝ rotation of 2D vectors
    R3←(⊂1+⍳3)⌷⍤1{⊃A⍨/⍺}R⊢ ⋄ R3D←(⊂1+⍳3)⌷⍤1{⊃AD⍨/⍺}R⊢                ⍝ rotation of 3D vectors    
    RND←{⍺←1 ⋄ F←{(1 2○2×⊂○?⍺⍴0)×⊂⍵*÷2} ⋄ ⍺×U⍵(F∘(1∘-),F)?⍵⍴0}       ⍝ random unitary quaternions    
    (u i j k)←=∘⊂⍨⍳4 ⋄ (x y z)←=∘⊂⍨⍳3                                ⍝ base units
 
    ∇ Test ;t;T;S;v;w;s;p;q;r;a;b;c;d;e;as
        ⎕CT←1E¯10 ⋄ t←0 ⋄ w←?0
        T←{0∊⍵:('TEST FAILED: ',⍺)⎕signal 8 ⋄ t+←1}
        'broom bridge'T((⊂-u)≡¨P¨⍨i j k)∧(-u)≡i P j P k
        'scalar difference'T(¯1≡¨D⍨¨i j k)∧(0≡¨i j k D¨j k i)
        :For s :In (⍬ 1 3 (2 3))
            (p q r)←RND¨3⍴⊆s ⋄ v←s∘⍴¨u ⋄ S←{⍵,' ',⍕s}
            (S'unit')T v≡⍥(1∘+)P∘C⍨q
            (S'neutral')T q∘≡¨(q P v)(v P q)
            (S'scalar')T(w×q P p)∘≡¨((w×q)P p)(q P w×p)
            (S'commutatative')T(q P w×v)≡(w×v)P q
            (S'associative')T(p P q P r)≡(p P q)P r
            (S'left distributive')T((p + q)P r)≡(p P r)+q P r
            (S'right distributive')T(p P q + r)≡(p P q)+p P r
            (S'random')T(((s⍴1)≡∘⊃+.×⍨)∧(⊂,s)∧.≡⍴¨)RND s
        :EndFor
        a←?4⍴0 ⋄ e←⊃b←?4⍴⊂3⍴0 ⋄ c←?4⍴⊂3 2⍴0 ⋄ d←0 w@0 2⊢c
        'conform scalar'T 1⊣(⊂a)P¨as←a b c d
        'conform list'T 1⊣(⊂b)P¨a b
        'conform matrix'T 1⊣(⊂c)P¨a c d
        'conform mixed'T 1⊣(⊂d)P¨a c d
        'operator'T((⊂a)P¨as)≡(⊂a)(×_P)¨as
        'inner product'T(3 3)(2 2)≡⍴∘⊃¨c(+.×_P,⍥⊂+.×_P⍨)⍉¨c
        'outer product'T 3 3 2≡⍴⊃b∘.×_P c
        'scalar extension'T(w×¨a b c)≡w P _¨a b c
        '1D-vector extension'T((⊂,1)P _¨as)≡(⊂0 1 0 0)P¨as
        '2D-vector extension'T((⊂1 2)P _¨as)≡(⊂0 1 2 0)P¨as
        '3D-vector extension'T((⊂1 2 3)P _¨as)≡(⊂0 1 2 3)P¨as
        'unitary'T(1∧.=∘∊M⍨)∘U¨a b c d
        'rotate'T(∘.R⍨i j k)≡3 3⍴i(-j)(-k)(-i)j(-k)(-i)(-j)k
        'rotate 2D'T(0 1)(0 ¯1)≡90 ¯90 R2D¨⊂1 0
        'rotate 3D'T(0 1 0)≡90(0 0 1)R3D 1 0 0
        'angle'T 0 90 180≡(1 0 0)(0 1 0)(¯1 0 0)∆D¨⊂1 0 0
        'euler'T(E e)≡⊃P/(0 0 1)(1 0 0)(0 0 1)A¨⌽e←⊃b
        ⎕←(⍕t),' TESTS PASSED'
    ∇
:EndNamespace
